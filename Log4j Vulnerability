                                                                   Log4j zero-day vulnerability
   
   https://www.indiatoday.in/technology/features/story/log4j-zero-day-vulnerability-what-it-is-and-how-it-impacts-users-all-explained-in-5-points-1887213-2021-12-13
  
  The security risk with Log4j has been termed as CVE-2021-44228 or Log4Shell or LogJam or Log4Shell or Log4j RCE(Remote Code Execution).
  CVE stand for Common Vulnerabilities and Exposures. CVE provides a free dictionary for organizations to improve their cyber security. 
  
  As mentioned in a blog on Apache Logging Services, the vulnerability was discovered by Chen Zhaojun of the Alibaba Cloud Security Team. As per the Common Vulnerability Scoring System or CVSS, Apache team ranked the vulnerability as 10. This means that the Log4Shell has been rated as a "Critical" vulnerability.
  If a device that is connected to the internet runs Apache Log4j, versions 2.0-to-2.14.1, then they are vulnerable to Log4Shell.
  
  Apache Log4j2 2.0-beta9 through 2.15.0 (excluding security releases 2.12.2, 2.12.3, and 2.3.1) JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled. From log4j 2.15.0, this behavior has been disabled by default. From version 2.16.0 (along with 2.12.2, 2.12.3, and 2.3.1), this functionality has been completely removed. 
  Note that this vulnerability is specific to log4j-core and does not affect log4net, log4cxx, or other Apache Logging Services projects.
  
  What is this & way to mitigate(reducing to make less harm)
   https://www.youtube.com/watch?v=gkVq4kLULOA&t=20s
   https://www.youtube.com/watch?v=EyewKNb192c
   
  Practical example in spring project
  https://www.youtube.com/watch?v=4o6dyoHYRWE&t=301s
  
