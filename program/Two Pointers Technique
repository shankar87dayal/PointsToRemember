Two pointers is really an easy and effective technique that is typically used for searching pairs in a sorted array.
Given a sorted array A (sorted in ascending order), having N integers, find if there exists any pair of elements (A[i], A[j]) such that their sum is equal to X.

Steps
1) If (i+j)>X then i=i & j=j-1
        OR
   If (i+j)<X then i=i+1 & j=j
2) till (i+j)=X
If their sum is smaller than X then we shift the left pointer to right
or if their sum is greater than X then we shift the right pointer to left, 
in order to get closer to the sum. 
We keep moving the pointers until we get the sum as X. 

https://www.geeksforgeeks.org/two-pointers-technique/

import java.io.*;

class GFG
{
	
	public static int isPairSum(int A[], int N, int X)
	{
		// represents first pointer
		int i = 0;

		// represents second pointer
		int j = N - 1;

		while (i < j) {

			if (A[i] + A[j] == X)
				return 1;
			else if (A[i] + A[j] < X)
				i++;
			     else
					j--;
		}
		return 0;
	}

	public static void main(String[] args)
	{

		int arr[] = { 2, 3, 5, 8, 9, 10, 11 };
		
		// value to search
		int val = 17;
	
		// size of the array
		int arrSize = arr.length;
	
		// Function call
		System.out.println(isPairSum(arr, arrSize, val));
	}
}
