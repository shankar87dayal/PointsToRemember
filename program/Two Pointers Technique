Two pointers is really an easy and effective technique that is typically used for searching pairs in a sorted array.
Given a sorted array A (sorted in ascending order), having N integers, find if there exists any pair of elements (A[i], A[j]) such that their sum is equal to X.

=====================================================Type of Two Pointers Technique=======================================
1) Opposite direcional
2) Equi Directional (same as Sliding window technique)
=====================================================Steps for "opposite directional"================================================================
Steps
1) If (i+j)>X then i=i & j=j-1
        OR
   If (i+j)<X then i=i+1 & j=j
2) till (i+j)=X
If their sum is smaller than X then we shift the left pointer to right
or if their sum is greater than X then we shift the right pointer to left, 
in order to get closer to the sum. 
We keep moving the pointers until we get the sum as X. 

https://www.geeksforgeeks.org/two-pointers-technique/
https://www.youtube.com/watch?v=2wVjt3yhGwg
======================================================Coding================================================================
package com.pract.demo;

import java.util.Arrays;

public class TwoPointerAlgorithm {
	public static void isPairSum(int A[], int X) // Two pointer algorithm
	{
		int i = 0;
		int j = A.length - 1;
		Arrays.sort(A); //To sort array first
		while (i < j) {
			if (A[i] + A[j] == X) {
				System.out.println(A[i] + "=>" + A[j]);
				break;
			} else if (A[i] + A[j] < X)
				i++;
			else
				j--;
		}
	}

	public static void main(String[] args) {
		int arr[] = { 2, 3, 5, 7, 8, 9, 10, 11, 12 };
		int val = 17;

		sumIsX(arr, val);
		System.out.println("===========================");
		isPairSum(arr, val);
	}

	public static void sumIsX(int A[], int X) { // No sorting required.
		for (int i = 0; i < A.length; i++) {
			for (int j = i; j < A.length; j++) {
				if ((A[i] + A[j]) == X && i != j) {
					System.out.println(A[i] + ", " + A[j]);
				}
			}
		}
	}
}


============================Output=============================================
5, 12
7, 10
8, 9
===========================
5=>12
