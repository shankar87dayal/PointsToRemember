package com.dayal.service.thirdParty;

import com.dayal.component.rest.restTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.*;
import org.springframework.stereotype.Service;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;

import java.util.HashMap;

@Service
public class KongAPIServiceImpl implements KongAPIService{
    @Value("${url.KongAPI}")
    private String KongAPIUrlValue; //  http://IP Address:50001/api/oauth2/token

    @Value("${thirdParty.auth.client_id}")
    private String clientId; // "client_id": "KongAPIClient",

    @Value("${thirdParty.auth.client_secret}")
    private String clientSecret; // "client_secret": "Alphanumeric",

    @Value("${thirdParty.auth.grant_type}")
    private String grantType; // "grant_type": "client_credentials"

    @Autowired
    RestTemplate restTemplate;
	
	// Request is JSON body with clientId, clientSecret, grantType.
	// KongAPIUrlValue as URL with POST method.
	
	//Response is JSON with "token_type", "access_token", "expires_in"

    public String getKongAPI () {
        MultiValueMap<String, String> requestData = new LinkedMultiValueMap<String, String>();
        requestData.add("client_id", clientId);
        requestData.add("client_secret", clientSecret);
        requestData.add("grant_type", grantType);

        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);

        HttpEntity<MultiValueMap<String, String>> requestEntity = new HttpEntity<>(requestData, headers);
		

        ResponseEntity<HashMap<String, String>> response = restTemplate.exchange(KongAPIUrlValue, HttpMethod.POST, requestEntity, HashMap.class);

        String accessToken = response.getBody().get("access_token"); // Valid for 15 mins

        return accessToken;
    }
    
    public List<ServerResponse> clientRequestuest(ClientRequest clientRequest)
			throws JsonProcessingException,ResponseException {
	
		List<ServerResponse> responseList = new ArrayList<ServerResponse>();
		ResponseEntity<ServerResponse> response = null;
		ServerResponse serverResponse = null;
			
		HttpHeaders headers = new HttpHeaders();
		headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
		headers.setContentType(MediaType.APPLICATION_JSON);	
		String authToken = getKongAPI ();
		if(authToken != null) {	
			headers.setBearerAuth(authToken);
		}else {
			log.debug("Token generated is null");
			headers.setBearerAuth(null);
		}
		do {
			HttpEntity<ClientRequest> requestEntity = new HttpEntity<ClientRequest>(clientRequest, headers);
			response = restTemplate.exchange(KongAPIUrlValue, HttpMethod.POST, requestEntity, ServerResponse.class);
					
			serverResponse = response.getBody();
			if (serverResponse.getError() != null) {
				log.error("Error occurred in Withholding Tax Receipt Response : {}", serverResponse.getError());
				throw new ResponseException(serverResponse.getError()); }
			responseList.add(serverResponse);			
		} while (!(Objects.isNull(response.getBody().getData())));			
		return responseList;
	}
	
}
