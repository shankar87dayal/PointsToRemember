Open source Components/Projects in Spring cloud which are not available in spring boot:- Non functional requirement of microservice

1) Service Registration & Discovery - Netflix Eureka server - To registered all microservice.

2) Load Balancing - Spring Cloud Load Balancer (Best), Ribbon as client side load balancer.
		Spring Cloud Load Balancer is used with Feign client.
		
3) Fault Tolerance (Bulkhead, Time Limiter , Rate Limiter, Circuit Breaker, Retry)  - Resilence4j (Best), Hystrix (deprecated) -
If some depended microservice is down/not responding, retry it number of times and if connected even after that then to handle the error gracefully.

4) Easy Integration - Feign client

5) Cross Cutting Concerns - Spring Cloud Gateway  (Best), Zuul  as Proxy/API gateway.
   Cross Cutting Concerns are common requirement like 
                a) Security (Authentication, Authorization, Encryption/Decryption),
                b) Tracing (Track from incoming request till response via Logging), 
                c) Service aggregation (Interaction of one micro service to other), 
                d) Rate limit (To find the amount of resorce used in cloud environment), 
                etc.
   API Gateway will automatically do the server side load balancing.
   API Gateway allows us to implement cross cutting concerns.

6) Distributed Tracing - Sleuth and Zipkin - 
   To track request by adding trace id
   To find the reason of failure and place where it failed

7) Centralized configuration
    a)Create config server
    b)Create config repository
    c)Create config client
